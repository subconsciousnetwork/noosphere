[package]
name = "noosphere-sphere"
version = "0.5.2"
edition = "2021"
description = "High-level access to content, address books and other features of spheres"
keywords = []
categories = []
rust-version = "1.60.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere-sphere"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[features]
default = []
helpers = []

[dependencies]
anyhow = "^1"
cid = { workspace = true }
url = { version = "^2", features = ["serde"] }
tracing = { workspace = true }

noosphere-core = { version = "0.10.2", path = "../noosphere-core" }
noosphere-storage = { version = "0.6.2", path = "../noosphere-storage" }
noosphere-api = { version = "0.7.7", path = "../noosphere-api" }
noosphere-ipfs = { version = "0.4.2", path = "../noosphere-ipfs" }
noosphere-car = { version = "0.1.1", path = "../noosphere-car" }

ucan = { workspace = true }
ucan-key-support = { workspace = true }

async-trait = "~0.1"
tokio-stream = "~0.1"
async-stream = "~0.3"
tokio-util = { version = "0.7.7", features = ["io"] }
futures-util = "0.3.27"
libipld-core = { workspace = true }
libipld-cbor = { workspace = true }
bytes = "^1"
serde_json = "^1"
serde = "1"


[target.'cfg(target_arch = "wasm32")'.dependencies]
# TODO: We should eventually support gateway storage as a specialty target only,
# as it is a specialty use-case
tokio = { version = "^1", features = ["sync", "macros"] }
wasm-bindgen = "~0.2"
wasm-bindgen-futures = "0.4.33"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "^1", features = ["full"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "~0.3"
