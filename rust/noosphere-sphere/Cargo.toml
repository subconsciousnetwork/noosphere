[package]
name = "noosphere-sphere"
version = "0.10.1"
edition = "2021"
description = "High-level access to content, address books and other features of spheres"
keywords = []
categories = []
rust-version = "1.60.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere-sphere"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[features]
default = []
helpers = []

[dependencies]
anyhow = { workspace = true }
cid = { workspace = true }
iroh-car = { workspace = true }
url = { version = "^2", features = ["serde"] }
tracing = { workspace = true }

noosphere-core = { version = "0.15.1", path = "../noosphere-core" }
noosphere-storage = { version = "0.8.1", path = "../noosphere-storage" }
noosphere-api = { version = "0.12.1", path = "../noosphere-api" }

ucan = { workspace = true }
ucan-key-support = { workspace = true }

async-trait = "~0.1"
tokio-stream = { workspace = true }
async-stream = { workspace = true }
tokio-util = { version = "0.7.7", features = ["io"] }
futures-util = "0.3.27"
libipld-core = { workspace = true }
libipld-cbor = { workspace = true }
bytes = "^1"
serde_json = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }

[dev-dependencies]
noosphere-core = { version = "0.15.1", path = "../noosphere-core", features = ["helpers"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# TODO: We should eventually support gateway storage as a specialty target only,
# as it is a specialty use-case
tokio = { workspace = true, features = ["sync", "macros"] }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = "0.4.37"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["full"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = { workspace = true }
