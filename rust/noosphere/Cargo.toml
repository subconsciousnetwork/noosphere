[package]
name = "noosphere"
version = "0.2.0"
edition = "2021"
description = "A high-level package for dealing with accessing the Noosphere"
keywords = ["noosphere"]
categories = ["filesystem"]
rust-version = "1.60.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[lib]
crate-type = ["rlib", "staticlib", "cdylib"]

[profile.release]
opt-level = 'z'
lto = true

[features]
headers = ["safer-ffi/headers"]

[dependencies]
anyhow = "^1"
thiserror = "^1"
lazy_static = "^1"
cid = "~0.8"
async-trait = "~0.1"
tracing = "~0.1"
url = "^2"
subtext = { version = "~0.3" }

noosphere-core = { version = "0.2.0", path = "../noosphere-core" }
noosphere-fs = { version = "0.1.0", path = "../noosphere-fs" }
noosphere-storage = { version = "0.1.0", path = "../noosphere-storage" }
noosphere-api = { version = "0.3.0", path = "../noosphere-api" }
ucan = { version = "0.7.0-alpha.1" }
ucan-key-support = { version = "0.7.0-alpha.1" }

[dev-dependencies]
wasm-bindgen-test = "~0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "^1", features = ["sync"] }
rexie = { version = "~0.4" }
wasm-bindgen = "~0.2"
js-sys = "~0.3"
tracing-wasm = "~0.2"

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "~0.3"
features = [
  "CryptoKey",
]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
safer-ffi = { version = "~0.0.10", features = ["proc_macros"] }
tokio = { version = "^1", features = ["full"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
temp-dir = "0.1"