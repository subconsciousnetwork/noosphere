[package]
name = "noosphere"
version = "0.15.4"
edition = "2021"
description = "A high-level package for dealing with accessing the Noosphere"
keywords = ["noosphere"]
categories = ["filesystem"]
rust-version = "1.70.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[lib]
crate-type = ["rlib", "staticlib", "cdylib"]

[features]
default = []
test-kubo = []
headers = ["safer-ffi/headers"]
ipfs-storage = ["noosphere-ipfs"]
rocksdb = ["noosphere-storage/rocksdb"]

[dependencies]
anyhow = { workspace = true }
pkg-version = "^1.0.0"
thiserror = { workspace = true }
lazy_static = "^1"
cid = { workspace = true }
async-trait = "~0.1"
async-stream = { workspace = true }
tracing = { workspace = true }
url = { workspace = true, features = ["serde"] }
subtext = { workspace = true }
instant = { workspace = true }
itertools = "0.11.0"
rand = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { version = "~0.7", features = ["io"] }
libipld-core = { workspace = true }
libipld-cbor = { workspace = true }
bytes = "^1"

noosphere-core = { version = "0.17.3", path = "../noosphere-core" }
noosphere-storage = { version = "0.9.3", path = "../noosphere-storage" }
noosphere-ipfs = { version = "0.8.4", path = "../noosphere-ipfs", optional = true }
ucan = { workspace = true }
ucan-key-support = { workspace = true }

[dev-dependencies]
libipld-core = { workspace = true }
rand = { workspace = true }
serde_json = { workspace = true }

noosphere-core = { version = "0.17.3", path = "../noosphere-core", features = ["helpers"] }
noosphere-common = { version = "0.1.2", path = "../noosphere-common", features = ["helpers"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# TODO: We should eventually support gateway storage as a specialty target only,
# as it is a specialty use-case
tokio = { workspace = true, features = ["sync"] }
rexie = { version = "~0.5" }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }
js-sys = { workspace = true }
noosphere-into = { version = "0.11.4", path = "../noosphere-into" }

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
workspace = true
features = [
  "CryptoKey",
]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
safer-ffi = { version = "0.1.2", features = ["proc_macros", "python-headers"] }
tokio = { workspace = true, features = ["full"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tempfile = { workspace = true }
reqwest = { workspace = true }
# TODO(#629): This is a dependency cycle hack that we need until we can get off of release-please
noosphere-cli-dev = { path = "../noosphere-cli", features = ["helpers"], package = "noosphere-cli" }
noosphere-ns-dev = { path = "../noosphere-ns", package = "noosphere-ns" }
noosphere-gateway-dev = { path = "../noosphere-gateway", package = "noosphere-gateway" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = { workspace = true }
witty-phrase-generator = "~0.2"
instant = { version = "0.1.12", features = ["wasm-bindgen"] }
gloo-timers = { workspace = true }

[build-dependencies]
cfg_aliases = "0.1.0"
