[package]
name = "noosphere-ns"
version = "0.12.0"
edition = "2021"
description = "A P2P name system for Noosphere"
keywords = [
  "name-system",
  "noosphere",
  "p2p",
  "dht",
  "distributed",
]
categories = [
  "network-programming",
  "asynchronous",
]
rust-version = "1.75.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere-ns"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[dependencies]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
anyhow = { workspace = true }
tracing = { workspace = true }
thiserror = { workspace = true }
lazy_static = "^1"
cid = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
tokio = { workspace = true, features = ["io-util", "io-std", "sync", "macros", "rt", "rt-multi-thread"] }
noosphere-storage = { workspace = true }
noosphere-core = { workspace = true }
noosphere-common = { workspace = true }
noosphere-ucan = { workspace = true, features = ["ed25519"] }
libp2p = { version = "0.53.2", default-features = false, features = [ "ed25519", "identify", "dns", "kad", "macros", "noise", "serde", "tcp", "tls", "tokio", "yamux" ] }
void = { workspace = true }

# noosphere_ns::bin
noosphere = { workspace = true, optional = true }
noosphere-ipfs = { workspace = true, optional = true }
clap = { version = "^4.5", features = ["derive"], optional = true }
home = { version = "~0.5", optional = true }
toml = { version = "~0.8", optional = true }

# noosphere_ns::server
axum = { workspace = true, features = ["json", "macros"], optional = true }
axum-tracing-opentelemetry = { workspace = true, optional = true }
reqwest = { workspace = true, default-features = false, features = ["json", "rustls-tls"], optional = true }
tower-http = { workspace = true, features = ["trace"], optional = true }
url = { version = "^2", features = [ "serde" ], optional = true }

[dev-dependencies]

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
rand = { workspace = true }
libipld-cbor = { workspace = true }
tempfile = { workspace = true }

[features]
default = ["orb-ns", "api-server", "observability"]
api-server = ["axum", "reqwest", "url", "tower-http"]
orb-ns = ["clap", "noosphere", "home", "toml", "noosphere-ipfs"]
observability = ["axum-tracing-opentelemetry"]

[[bin]]
name = "orb-ns"
required-features = ["orb-ns"]
