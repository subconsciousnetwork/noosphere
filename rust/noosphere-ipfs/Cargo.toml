[package]
name = "noosphere-ipfs"
version = "0.7.3"
edition = "2021"
description = "An interface for an IPFS client."
keywords = [
  "ipfs",
  "noosphere",
  "p2p",
]
categories = [
  "network-programming",
  "asynchronous",
]
rust-version = "1.60.0"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/noosphere-ipfs"
repository = "https://github.com/subconsciousnetwork/noosphere"
homepage = "https://github.com/subconsciousnetwork/noosphere"
readme = "README.md"

[features]
default = ["storage"]
storage = ["ucan"]
test_kubo = []

[dependencies]
anyhow = { workspace = true }
async-compat = { version = "~0.2" }
async-trait = "~0.1"
async-stream = { workspace = true }
libipld-core = { workspace = true }
libipld-cbor = { workspace = true }
cid = { workspace = true }
reqwest = { version = "~0.11", default-features = false, features = ["json", "rustls-tls", "stream"] }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true, features = ["io-util"] }
tokio-stream = { workspace = true }
tracing = { workspace = true }
url = { workspace = true, features = [ "serde" ] }
noosphere-storage = { version = "0.8.1", path = "../noosphere-storage" }
ucan = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
hyper = { version = "^0.14.27", features = ["full"] }
hyper-multipart-rfc7578 = "~0.8"
ipfs-api-prelude = "0.6"

[dev-dependencies]

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
rand = { workspace = true }
iroh-car = { workspace = true }
libipld-cbor = { workspace = true }
noosphere-core = { version = "0.15.1", path = "../noosphere-core" }
